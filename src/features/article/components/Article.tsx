import classes from './Article.module.css'import { useEffect, useState } from 'react'import { get } from '../../../api/api'import { type ArticleFormat } from '../../../api/types'import ArticleSkeleton from './ArticleSkeleton'import ArticleContainer from './ArticleContainer'const Article = () => {  const [articles, setArticles] = useState<ArticleFormat[]>([])  const [loading, setLoading] = useState<boolean>(true)  useEffect(() => {    void getNewList()  }, [])  async function getNewList () {    setLoading(true)    get('https://hacker-news.firebaseio.com/v0/topstories.json?print=pretty&print=pretty&orderBy="$key"&limitToFirst=15')      .then(async newsIds => await Promise.all(newsIds.map(async (id: string) => await get(`https://hacker-news.firebaseio.com/v0/item/${id}.json?print=pretty`))))      .then(newsList => { setArticles(newsList) }      ).catch(error => {        console.error('Ошибка при получении данных:', error)      })      .finally(() => {        setLoading(false) // Устанавливаем состояние загрузки в false после завершения запроса      })  }  return (      <div className={classes.articleWrapper}>          {loading            ? <ArticleSkeleton />            : <>                <div className={classes.startTitle}>Количество новостей: {articles.length}</div>                {articles.map((note: ArticleFormat) => (                    <ArticleContainer id={note.id} title={note.title} userName={note.by} rating={note.score} time={note.time} key={note.id} />                ))}            </>          }      </div>  )}export default Article